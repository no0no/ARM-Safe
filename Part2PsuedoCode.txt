   ____ ___  __  __ ____    _ ____  ____    ____            _           _     _____ 
  / ___/ _ \|  \/  |  _ \  / |___ \|___ \  |  _ \ _ __ ___ (_) ___  ___| |_  |___ / 
 | |  | | | | |\/| | |_) | | | __) | __) | | |_) | '__/ _ \| |/ _ \/ __| __|   |_ \ 
 | |__| |_| | |  | |  __/  | |/ __/ / __/  |  __/| | | (_) | |  __/ (__| |_   ___) |
  \____\___/|_|  |_|_|     |_|_____|_____| |_|   |_|  \___// |\___|\___|\__| |____/ 
                                                         |__/                       


@ Project 3: Part2PsuedoCode.txt
@ Group 4: (Gage Aschenbrenner, Ian B., Filiberto Reyes, Wei Zhao, Nathan Kandouw)

@ This File contains the PseudoCode for Part2.s

@ The Following are a list of functions contained in Part2.s and their intended functions.

@ DecryptMain
	- Containes the branch links for Part1 the order of the links represents how the module operates.

	Steps: 1. Open the input
		   2. Read the Shift Integer
		   3. Read the String to be Decrypted
		   4. Decrypt the String using the Shift Value
		   5. Open the output
		   6. Print the password
		   7. Close Input and Output Files

@ OpenInput
	- Opens "decrypt-input.txt" to be read by the rest of the program

	- If "decrypt-input.txt" is not found this module branches to NoInFileFound

@ ReadInt
	- Reads the integer value from "shift.txt" and stores it into register memory

@ ReadString
	- Reads Input String from "decrypt-input.txt" and stores it into register memory

@ Encrypt
	- Decrypts the String using the String and Shift Value

	- If the shift value causes the value of the ASCII character being determined to go under the value 32, this module branches over to RollUnder.

@ OpenOutput
	- Opens "decrypt-output.txt" for output if "decrypt-output.txt" does not exist this module will create it.

@ PrintPassword
	- Prints the password using SWI_PrStr

@ OpenShift
	- Opens "shift.txt" and stores the shift value into ShiftFileHandle.

@ PrintShift
	- Prints the Shift Value to Standard Output
	
@ RollUnder
	- Decrypt branches to this module if the ASCII value being determined is lower than 32

	- This Module Rolls the ASCII Value back to 126 and returns to Encrypt

@ ZeroOrLess
	- If the shift value is less than or equal to zero this module returns error messages

	- If negative returns "[Encryption] Please input numbers greater than 0 for your shift value"

	- If Zero returns "Fatal Error: 0 is not a sufficient shift value"

@ NoInFileFound
	- If there is no input file then this module branches to exit

@ ReadError
	- If there is no shift value found in the input then this module returns "Fatal Error: Unable to read number from input.txt"

	- After printing the error message this module branches to CloseFiles

@ ReadStringError
	- If there is no String found in the input then this module returns "Fatal Error: Unable to read string from input.txt"

	- After printing the error message this module branches to CloseFiles

@ CloseFiles
	- Closes "decrypt-input.txt" and "shift.txt" and "decrypt-output.txt"

	- After closing this module branches to Exit

@ Exit
	- This module closes Part2.s